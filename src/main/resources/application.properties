spring.application.name=redboost
spring.datasource.url=jdbc:mysql://localhost:3306/redboost?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

server.port=8085

# JWT Configuration
#jwt.expiration=86400000 # 24 hours in milliseconds
# Secret Key for JWT Authentication
jwt.secret.key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30

# OAuth2 LinkedIn
spring.security.oauth2.client.registration.linkedin.client-id=78j2ignq97z5ji
spring.security.oauth2.client.registration.linkedin.client-secret=WPL_AP1.WJ3XxEXIIWsZDaQz.WLRLuw==
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile,r_emailaddress
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
spring.security.oauth2.client.registration.linkedin.redirect-uri=http://localhost:8085/Auth/oauth/login
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code

# Cloudinary config
cloudinary.cloud-name=Redboost
cloudinary.api-key=263428674296821
cloudinary.api-secret=3iSK04qvOBY5HPFLjx8oYNuA5Ik